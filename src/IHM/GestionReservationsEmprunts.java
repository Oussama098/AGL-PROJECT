package IHM;

import dao.empruntController;
import dao.oeuvreController;
import entity.emprunt;
import entity.oeuvre;
import entity.reservation;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;

import static java.lang.Integer.parseInt;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableModel;
/**
 * 
 * @author Diallo & Janati
 */
public class GestionReservationsEmprunts extends javax.swing.JFrame {

    public GestionReservationsEmprunts() {
        initComponents();
        setIdentifiant();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/bibliotheque_icone.png")));
//       tableExemplaires.setModel(new DefaultTableModel(new Object[0][0],
//                new String[]{"ID", "Etat"}));
//        tableExemplaires.setRowHeight(30);

        tableEmpCours.setModel(new DefaultTableModel(new Object[0][0],
                new String[]{"ID", "oeuvre", "Usager",
                    "Date Emprunt", "Date Retour"}));
        tableEmpCours.setRowHeight(30);

//        tableResaCours.setModel(new DefaultTableModel(new Object[0][0],
//                new String[]{"ID", "Oeuvre", "Usager",
//                    "Date Réservation"}));
//        tableResaCours.setRowHeight(30);

        

        tableEmpCours.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                int row = tableEmpCours.getSelectedRow();
                int nbreCol = tableEmpCours.getColumnCount();

                dataLigneSelectedEmprunts = new Object[nbreCol];
                if (row >= 0) {
                    for (int i = 0; i < nbreCol; i++) {
                        dataLigneSelectedEmprunts[i] = tableEmpCours.getModel().getValueAt(row, i);
                    }
                    
                } else {
                    
                }
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });

        tableResaCours.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                int row = tableResaCours.getSelectedRow();
                int nbreCol = tableResaCours.getColumnCount();

                dataLigneSelectedReservations = new Object[nbreCol];
                if (row >= 0) {
                    for (int i = 0; i < nbreCol; i++) {
                        dataLigneSelectedReservations[i] = tableResaCours.getModel().getValueAt(row, i);
                    }
                    annulerResaButton.setEnabled(true);
                } else {
                    annulerResaButton.setEnabled(false);
                }
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        mainPanel = new javax.swing.JPanel();
        EmpruntPanel = new javax.swing.JPanel();
        panEmpCours = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableEmpCours = new javax.swing.JTable();
        menuEmpPanel = new javax.swing.JPanel();
        emprunterButton = new javax.swing.JButton();
        affEmpButton = new javax.swing.JButton();
        ReservationPanel = new javax.swing.JPanel();
        panResaCours = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tableResaCours = new javax.swing.JTable();
        menuResaPanel = new javax.swing.JPanel();
        annulerResaButton = new javax.swing.JButton();
        reserverButton = new javax.swing.JButton();
        affResaButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        empruntsButton = new javax.swing.JButton();
        retourButton = new javax.swing.JButton();
        titleResaEmpLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        identifiantLabel1 = new javax.swing.JLabel();
        auteurLabel1 = new javax.swing.JLabel();
        titreLabel1 = new javax.swing.JLabel();
        categorieLabel1 = new javax.swing.JLabel();
        titreLabelValue = new javax.swing.JLabel();
        categorieLabelValue = new javax.swing.JLabel();
        typeOeuvreLabelValue = new javax.swing.JLabel();
        auteurLabelValue = new javax.swing.JLabel();
        nbExemplaireLabelValue = new javax.swing.JLabel();
        identifiantComboBox = new javax.swing.JComboBox<>();
        titreLabel2 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        isbnLabelValue = new javax.swing.JLabel();
        TtitreLabelValue = new javax.swing.JLabel();
        CcategorieLabelValue = new javax.swing.JLabel();
        AauteurLabelValue = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestion Réservations et Oeuvres");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setLayout(new java.awt.CardLayout());

        EmpruntPanel.setBackground(new java.awt.Color(255, 255, 255));

        panEmpCours.setBackground(new java.awt.Color(255, 255, 255));
        panEmpCours.setBorder(javax.swing.BorderFactory.createTitledBorder("Emprunts en cours des exempalaires de l'oeuvre"));

        jScrollPane1.getViewport().setBackground(Color.white);
        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        tableEmpCours.setBackground(new java.awt.Color(204, 255, 255));
        tableEmpCours.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "oeuvre", "Usager", "Date emprunt", "Date Retour"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableEmpCours.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableEmpCours.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tableEmpCours);

        javax.swing.GroupLayout panEmpCoursLayout = new javax.swing.GroupLayout(panEmpCours);
        panEmpCours.setLayout(panEmpCoursLayout);
        panEmpCoursLayout.setHorizontalGroup(
            panEmpCoursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panEmpCoursLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1))
        );
        panEmpCoursLayout.setVerticalGroup(
            panEmpCoursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
        );

        menuEmpPanel.setBackground(new java.awt.Color(204, 255, 255));
        menuEmpPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        emprunterButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        emprunterButton.setText("Emprunter");
        emprunterButton.setEnabled(false);
        emprunterButton.setPreferredSize(new java.awt.Dimension(95, 31));
        emprunterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emprunter(evt);
            }
        });

        affEmpButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        affEmpButton.setText("Afficher emprunts");
        affEmpButton.setEnabled(false);
        affEmpButton.setPreferredSize(new java.awt.Dimension(95, 31));
        affEmpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                affEmpButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuEmpPanelLayout = new javax.swing.GroupLayout(menuEmpPanel);
        menuEmpPanel.setLayout(menuEmpPanelLayout);
        menuEmpPanelLayout.setHorizontalGroup(
            menuEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuEmpPanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(emprunterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 214, Short.MAX_VALUE)
                .addComponent(affEmpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102))
        );
        menuEmpPanelLayout.setVerticalGroup(
            menuEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuEmpPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(menuEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(affEmpButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emprunterButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
        );

        javax.swing.GroupLayout EmpruntPanelLayout = new javax.swing.GroupLayout(EmpruntPanel);
        EmpruntPanel.setLayout(EmpruntPanelLayout);
        EmpruntPanelLayout.setHorizontalGroup(
            EmpruntPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmpruntPanelLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(EmpruntPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(menuEmpPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panEmpCours, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(2, 2, 2))
        );
        EmpruntPanelLayout.setVerticalGroup(
            EmpruntPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmpruntPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(menuEmpPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(panEmpCours, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        panEmpCours.getAccessibleContext().setAccessibleName("Emprunts en cours des l'oeuvre");

        mainPanel.add(EmpruntPanel, "panel1");

        ReservationPanel.setBackground(new java.awt.Color(255, 255, 255));

        panResaCours.setBackground(new java.awt.Color(255, 255, 255));
        panResaCours.setBorder(javax.swing.BorderFactory.createTitledBorder("Réservations en cours"));

        jScrollPane5.getViewport().setBackground(Color.white);
        jScrollPane5.setBackground(new java.awt.Color(255, 255, 255));

        tableResaCours.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Oeuvre", "Usager", "Date Reservation"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableResaCours.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(tableResaCours);

        javax.swing.GroupLayout panResaCoursLayout = new javax.swing.GroupLayout(panResaCours);
        panResaCours.setLayout(panResaCoursLayout);
        panResaCoursLayout.setHorizontalGroup(
            panResaCoursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panResaCoursLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane5))
        );
        panResaCoursLayout.setVerticalGroup(
            panResaCoursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
        );

        menuResaPanel.setBackground(new java.awt.Color(255, 255, 255));
        menuResaPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        annulerResaButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        annulerResaButton.setText("Annuler");
        annulerResaButton.setEnabled(false);
        annulerResaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annulerResaButtonActionPerformed(evt);
            }
        });

        reserverButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        reserverButton.setText("Réserver");
        reserverButton.setEnabled(false);
        reserverButton.setPreferredSize(new java.awt.Dimension(95, 31));
        reserverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserverButtonActionPerformed(evt);
            }
        });

        affResaButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        affResaButton.setText("Afficher ");
        affResaButton.setEnabled(false);
        affResaButton.setPreferredSize(new java.awt.Dimension(95, 31));
        affResaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                affResaButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuResaPanelLayout = new javax.swing.GroupLayout(menuResaPanel);
        menuResaPanel.setLayout(menuResaPanelLayout);
        menuResaPanelLayout.setHorizontalGroup(
            menuResaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuResaPanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(reserverButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(affResaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(annulerResaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
        );
        menuResaPanelLayout.setVerticalGroup(
            menuResaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuResaPanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(menuResaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(annulerResaButton)
                    .addComponent(reserverButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(affResaButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ReservationPanelLayout = new javax.swing.GroupLayout(ReservationPanel);
        ReservationPanel.setLayout(ReservationPanelLayout);
        ReservationPanelLayout.setHorizontalGroup(
            ReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1314, Short.MAX_VALUE)
            .addGroup(ReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ReservationPanelLayout.createSequentialGroup()
                    .addGap(2, 2, 2)
                    .addGroup(ReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(menuResaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panResaCours, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        ReservationPanelLayout.setVerticalGroup(
            ReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
            .addGroup(ReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ReservationPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(menuResaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(4, 4, 4)
                    .addComponent(panResaCours, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        mainPanel.add(ReservationPanel, "panel2");

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        empruntsButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        empruntsButton.setText("Emprunts");
        empruntsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empruntsButtonActionPerformed(evt);
            }
        });

        retourButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        retourButton.setText("Retour");
        retourButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retourButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(empruntsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(retourButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(empruntsButton)
                .addGap(94, 94, 94)
                .addComponent(retourButton)
                .addContainerGap(257, Short.MAX_VALUE))
        );

        titleResaEmpLabel.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        titleResaEmpLabel.setText("Gestion des Réservations et Emprunts");

        jPanel3.setBackground(new java.awt.Color(204, 255, 255));

        identifiantLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        identifiantLabel1.setText("Identifiant ");

        auteurLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        auteurLabel1.setText("Auteur");

        titreLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        titreLabel1.setText("Titre");

        categorieLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        categorieLabel1.setText("Catégorie");

        titreLabelValue.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        titreLabelValue.setText(" ");

        categorieLabelValue.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        categorieLabelValue.setText(" ");

        typeOeuvreLabelValue.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        typeOeuvreLabelValue.setText(" ");

        auteurLabelValue.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        auteurLabelValue.setText(" ");

        nbExemplaireLabelValue.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        nbExemplaireLabelValue.setText(" ");

        identifiantComboBox.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        identifiantComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choix ID" }));
        identifiantComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                identifiantComboBoxActionPerformed(evt);
            }
        });

        titreLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        titreLabel2.setText("ISBN");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(titreLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(isbnLabelValue, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(titreLabelValue))
                        .addComponent(categorieLabelValue))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(identifiantLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(identifiantComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(titreLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TtitreLabelValue, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 181, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(auteurLabel1)
                        .addGap(26, 26, 26)
                        .addComponent(AauteurLabelValue, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(auteurLabelValue)
                            .addComponent(nbExemplaireLabelValue)
                            .addComponent(typeOeuvreLabelValue)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(categorieLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CcategorieLabelValue)))
                .addGap(604, 604, 604))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(identifiantLabel1)
                    .addComponent(typeOeuvreLabelValue)
                    .addComponent(identifiantComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(titreLabelValue)
                        .addComponent(auteurLabelValue)
                        .addComponent(auteurLabel1)
                        .addComponent(AauteurLabelValue))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(titreLabel2)
                        .addComponent(jLabel2)
                        .addComponent(isbnLabelValue)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TtitreLabelValue, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(titreLabel1)
                        .addComponent(categorieLabel1)
                        .addComponent(CcategorieLabelValue)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categorieLabelValue)
                    .addComponent(nbExemplaireLabelValue))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(252, 252, 252)
                .addComponent(titleResaEmpLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(126, 126, 126))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleResaEmpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void empruntsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empruntsButtonActionPerformed
        CardLayout card = (CardLayout) mainPanel.getLayout();
        card.show(mainPanel, "panel1");

        String identitfiant = identifiantComboBox.getSelectedItem().toString();
        if (!identitfiant.equals("Choix ID")) {
            emprunterButton.setEnabled(true);
        } else {
            emprunterButton.setEnabled(false);
            
            annulerResaButton.setEnabled(false);
        }
    }//GEN-LAST:event_empruntsButtonActionPerformed

    private void retourButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retourButtonActionPerformed
        Menu m = new Menu();
        this.dispose();
        m.setVisible(true);
    }//GEN-LAST:event_retourButtonActionPerformed

    private void affEmpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_affEmpButtonActionPerformed
        try {
            String identitfiant = identifiantComboBox.getSelectedItem().toString();
            if (!identitfiant.equals("Choix ID")) {
                oeuvre oeuvre = getOeuvreInfos();
                ArrayList<emprunt> listEmprunts = empruntController.findEmprunts(oeuvre);
                if (null != listEmprunts) {
                    fillEmpruntsJtable(listEmprunts);
                } else {
                    JOptionPane.showMessageDialog(null,"Aucun emprunt en cours de cette oeuvre trouvé");
                    String titre[] = new String[]{"ID", "oeuvre", "Usager",
                        "Date Emprunt", "Date Retour"};
                    Object data[][] = new Object[1][titre.length];
                    DefaultTableModel model = new DefaultTableModel(data, titre);
                    tableEmpCours.setModel(model);
                    tableEmpCours.setRowHeight(1);
                }
            }

        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_affEmpButtonActionPerformed

    private void emprunter(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emprunter

        String titre = TtitreLabelValue.getText();
        GestionEmprunts emprunter = new GestionEmprunts(this, true, titre);
        emprunter.setLocationRelativeTo(null);
        emprunter.setVisible(true);
    }//GEN-LAST:event_emprunter

    private void affResaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_affResaButtonActionPerformed
//        try {
//            String identitfiant = identifiantComboBox.getSelectedItem().toString();
//            if (!identitfiant.equals("Choix ID")) {
//                oeuvre oeuvre = getOeuvreInfos();
//                ArrayList<reservation> listReservations = ReservationControl.findByReservation(oeuvre);
//                if (null != listReservations) {
//                    fillResaJtable(listReservations);
//                } else {
//                    JOptionPane.showMessageDialog(null,
//                            "Aucune réservation en cours de cette oeuvre trouvée", "Informations",
//                            JOptionPane.INFORMATION_MESSAGE);
//                    String titre[] = new String[]{"ID", "Exemplaire", "Usager",
//                        "Date Emprunt", "Date Retour"};
//                    Object data[][] = new Object[1][titre.length];
//                    DefaultTableModel model = new DefaultTableModel(data, titre);
//                    tableResaCours.setModel(model);
//                    tableResaCours.setRowHeight(1);
//                }
//            }
//
//        } catch (Exception e) {
//            System.out.println("IHM.GestionReservationsEmprunts.affEmpButtonActionPerformed()");
//        }
    }//GEN-LAST:event_affResaButtonActionPerformed

    private void reserverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserverButtonActionPerformed
//        String titre = titreLabelValue.getText();
//        GestionReservations reserver = new GestionReservations(this, true, titre);
//        reserver.setLocationRelativeTo(null);
//        reserver.setVisible(true);
    }//GEN-LAST:event_reserverButtonActionPerformed

    private void annulerResaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annulerResaButtonActionPerformed
//        try {
//            int oeuvreId = getOeuvreID();
//            if (oeuvreId != -1 && tableResaCours.getSelectedRow() >= 0) {
//                int idUsager = parseInt(dataLigneSelectedReservations[2].toString());
//                ReservationControl.annuler(idUsager, titreLabelValue.getText());
//                ((ModelTableau) tableResaCours.getModel()).removeRow(tableResaCours.getSelectedRow());
//                showMessageSucces("Réservation annulée ");
//            }
//
//        } catch (ErrorException e) {
//            System.out.println("IHM.GestionReservationsEmprunts.annulerResaButtonActionPerformed()");
//        }
    }//GEN-LAST:event_annulerResaButtonActionPerformed

    private void identifiantComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_identifiantComboBoxActionPerformed
        
        String identitfiant = identifiantComboBox.getSelectedItem().toString();
        if (!identitfiant.equals("Choix ID")) {
            try {
                int id = parseInt(identitfiant);
                oeuvre oeuvre = oeuvreController.findById(id);
                isbnLabelValue.setText(oeuvre.getISBN());
                TtitreLabelValue.setText(oeuvre.getTitre());
                CcategorieLabelValue.setText(oeuvre.getCategorie());
                //typeOeuvreLabelValue.setText(oeuvre.getClass().getSimpleName());
                AauteurLabelValue.setText(oeuvre.getAuteur());
                //nbExemplaireLabelValue.setText(oeuvre.getExamplairesOeuvre().size() + "");
            } catch (Exception ex) {
                System.out.println("IHM.GestionReservationsEmprunts.identifiantComboBoxActionPerformed()");
            }
            affEmpButton.setEnabled(true);
            //affExempButton.setEnabled(true);
            emprunterButton.setEnabled(true);
            reserverButton.setEnabled(true);
            affResaButton.setEnabled(true);
        } else {
            TtitreLabelValue.setText("");
            CcategorieLabelValue.setText("");
            //typeOeuvreLabelValue.setText("");
            AauteurLabelValue.setText("");
            //nbExemplaireLabelValue.setText("");
            //affEmpButton.setEnabled(false);
            //affExempButton.setEnabled(false);
            emprunterButton.setEnabled(false);
            //rendreButton.setEnabled(false);
            reserverButton.setEnabled(false);
            affResaButton.setEnabled(false);

        }
        //rendreButton.setEnabled(false);
        //vider les tables
        //tableExemplaires.setModel(new DefaultTableModel(new Object[0][0],
//            new String[]{"ID", "Etat"}));
//    tableExemplaires.setRowHeight(30);

    tableEmpCours.setModel(new DefaultTableModel(new Object[0][0],
        new String[]{"ID", "oeuvre", "Usager",
            "Date Emprunt", "Date Retour"}));
tableResaCours.setRowHeight(30);

tableResaCours.setModel(new DefaultTableModel(new Object[0][0],
    new String[]{"ID", "Oeuvre", "Usager",
        "Date Réservation"}));
        tableResaCours.setRowHeight(30);
    }//GEN-LAST:event_identifiantComboBoxActionPerformed

    private int getOeuvreID() {
        String id = identifiantComboBox.getSelectedItem().toString();
        if (!id.equals("Choisir identifiant")) {
            return parseInt(id);
        }
        return -1;
    }

    

    private void fillEmpruntsJtable(ArrayList<emprunt> listEmprunts) {
        String titre[] = new String[]{"ID", "Exemplaire", "Usager",
            "Date Emprunt", "Date Retour"};
        if (listEmprunts.size() > 0) {
//            pour le findByID si l'objet ajouté est null
            int nbLigne = (null == listEmprunts.get(0)) ? 0 : listEmprunts.size();
            Object data[][] = new Object[nbLigne][titre.length];
            for (int i = 0; i < nbLigne; i++) {
                emprunt emprunt = listEmprunts.get(i);
                data[i][0] = emprunt.getId();
                //[i][1] = emprunt.getExemplairesEmprunt().getId();
                data[i][2] = emprunt.getUsagerEmprunt().getNom();
                data[i][3] = emprunt.getDateEmprunt();
                data[i][4] = emprunt.getDateRetourPrevu();

            }
            DefaultTableModel model = new DefaultTableModel(data, titre);
            tableEmpCours.setModel(model);
            tableEmpCours.setRowHeight(30);
        } else {
            //afficher tableau vide
            Object data[][] = new Object[1][titre.length];
            DefaultTableModel model = new DefaultTableModel(data, titre);
            tableEmpCours.setModel(model);
            tableEmpCours.setRowHeight(1);
        }
    }

//    private void fillResaJtable(ArrayList<reservation> listReservations) {
//        String titre[] = new String[]{"ID", "Oeuvre", "Usager",
//            "Date Réservation"};
//        if (listReservations.size() > 0) {
//            int nbLigne = (null == listReservations.get(0)) ? 0 : listReservations.size();
//            Object data[][] = new Object[nbLigne][titre.length];
//            for (int i = 0; i < nbLigne; i++) {
//                reservation reservation = listReservations.get(i);
//                data[i][0] = reservation.getId();
//                data[i][1] = reservation.getOeuvresReservation().getId();
//                data[i][2] = reservation.getUsagerReservation().getId();
//                data[i][3] = reservation.getDateReservation();
//
//            }
//            DefaultTableModel model = new DefaultTableModel(data, titre);
//            tableResaCours.setModel(model);
//            tableResaCours.setRowHeight(30);
//        } else {
//            //afficher tableau vide
//            Object data[][] = new Object[1][titre.length];
//            DefaultTableModel model = new DefaultTableModel(data, titre);
//            tableResaCours.setModel(model);
//            tableResaCours.setRowHeight(1);
//        }
//    }

    private void setIdentifiant() {
        ArrayList<oeuvre> tab= new ArrayList();
        tab= oeuvreController.getAll();
        for (oeuvre oe : tab) {
            identifiantComboBox.addItem(oe.getId()+"");
        }
    }

    
    private oeuvre getOeuvreInfos() {
        int id = parseInt(identifiantComboBox.getSelectedItem().toString());
        String isbn =isbnLabelValue.getText();
        String titre = TtitreLabelValue.getText();
        String auteur = AauteurLabelValue.getText();
        String categorie = CcategorieLabelValue.getText();
        
        oeuvre oeuvre=new oeuvre(id,isbn,titre,auteur,categorie);
        
        return oeuvre;
    }
    
    private Object dataLigneSelectedExemplaires[];
    private Object dataLigneSelectedEmprunts[];
    private Object dataLigneSelectedReservations[];
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AauteurLabelValue;
    private javax.swing.JLabel CcategorieLabelValue;
    private javax.swing.JPanel EmpruntPanel;
    private javax.swing.JPanel ReservationPanel;
    private javax.swing.JLabel TtitreLabelValue;
    private javax.swing.JButton affEmpButton;
    private javax.swing.JButton affResaButton;
    private javax.swing.JButton annulerResaButton;
    private javax.swing.JLabel auteurLabel1;
    private javax.swing.JLabel auteurLabelValue;
    private javax.swing.JLabel categorieLabel1;
    private javax.swing.JLabel categorieLabelValue;
    private javax.swing.JButton emprunterButton;
    private javax.swing.JButton empruntsButton;
    private javax.swing.JComboBox<String> identifiantComboBox;
    private javax.swing.JLabel identifiantLabel1;
    private javax.swing.JLabel isbnLabelValue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel menuEmpPanel;
    private javax.swing.JPanel menuResaPanel;
    private javax.swing.JLabel nbExemplaireLabelValue;
    private javax.swing.JPanel panEmpCours;
    private javax.swing.JPanel panResaCours;
    private javax.swing.JButton reserverButton;
    private javax.swing.JButton retourButton;
    public static javax.swing.JTable tableEmpCours;
    public static javax.swing.JTable tableResaCours;
    private javax.swing.JLabel titleResaEmpLabel;
    private javax.swing.JLabel titreLabel1;
    private javax.swing.JLabel titreLabel2;
    private javax.swing.JLabel titreLabelValue;
    private javax.swing.JLabel typeOeuvreLabelValue;
    // End of variables declaration//GEN-END:variables
    private empruntController empruntController= new empruntController();
    private oeuvreController oeuvreController= new oeuvreController();
}
